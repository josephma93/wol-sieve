name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install CF WARP
      run: |
        curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        sudo apt-get update && sudo apt-get install cloudflare-warp

    - name: Generate mdm.xml file in /var/lib/cloudflare-warp
      run: |
        sudo mkdir -p /var/lib/cloudflare-warp
        echo '
        
          organization
          leaflex.cloudflareaccess.com
          auth_client_id
          ${{ secrets.CLOUDFLARE_AUTH_CLIENT_ID }}
          auth_client_secret
          ${{ secrets.CLOUDFLARE_AUTH_CLIENT_SECRET }}
        ' | sudo tee /var/lib/cloudflare-warp/mdm.xml
        sudo chmod 777 /var/lib/cloudflare-warp/mdm.xml

    - name: Restart cloudflare-warp service
      run: sudo systemctl restart warp-svc.service && sleep 5

    - name: warp-cli connect
      run: warp-cli --accept-tos connect && sleep 20

    - name: Set route ip
      run: sudo ip route add 192.168.1.0/24 dev CloudflareWARP

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get short SHA
      id: vars
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Read package name from package.json
      id: package_name
      run: echo "PACKAGE_NAME=$(jq -r '.name' package.json)" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          dkr-reg.home.leaflex.site/${{ env.PACKAGE_NAME }}:latest
          dkr-reg.home.leaflex.site/${{ env.PACKAGE_NAME }}:${{ env.SHORT_SHA }}
        outputs: type=registry

    - name: Disconnect Cloudflare WARP
      run: warp-cli disconnect